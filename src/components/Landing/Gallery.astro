---
import { getResponsiveImageConfig } from '../../utils/images';

const galleryItems = [
  {
    title: 'Wedding Moments',
    description: 'Capturing love and joy on your special day',
    imageId: 'wedding',
    filename: 'wedding-gallery.jpg'
  },
  {
    title: 'Family Portraits',
    description: 'Timeless memories with your loved ones',
    imageId: 'family',
    filename: 'family-gallery.jpg'
  },
  {
    title: 'Professional Portraits',
    description: 'Stunning portraits that tell your story',
    imageId: 'portrait',
    filename: 'portrait-gallery.jpg'
  },
  {
    title: 'Special Events',
    description: 'Documenting your most memorable moments',
    imageId: 'event',
    filename: 'event-gallery.jpg'
  },
  {
    title: 'Couple Sessions',
    description: 'Intimate moments between two hearts',
    imageId: 'couple',
    filename: 'couple-gallery.jpg'
  },
  {
    title: 'Lifestyle Photography',
    description: 'Your everyday moments, beautifully captured',
    imageId: 'lifestyle',
    filename: 'lifestyle-gallery.jpg'
  },
  {
    title: 'Maternity & Newborn',
    description: 'The miracle of new life, preserved forever',
    imageId: 'maternity',
    filename: 'maternity-gallery.jpg'
  },
  {
    title: 'Commercial & Brand',
    description: 'Professional imagery for your business',
    imageId: 'commercial',
    filename: 'commercial-gallery.jpg'
  },
  {
    title: 'Fine Art Photography',
    description: 'Unique artistic perspectives on life',
    imageId: 'art',
    filename: 'art-gallery.jpg'
  }
];
---

<section class="py-24 bg-white">
  <div class="container">
    <h2 class="text-4xl font-bold text-center mb-4 font-['Cormorant_Garamond']">Gallery</h2>
    <p class="text-gray-600 text-center mb-16 max-w-2xl mx-auto">
      Explore my collection of moments captured through the lens. Each image tells a unique story, waiting to be shared.
    </p>
    <div class="relative max-w-6xl mx-auto">
      <div class="gallery-carousel overflow-hidden rounded-2xl">
        <div class="flex transition-transform duration-500 ease-in-out">
          {galleryItems.map((item, index) => {
            const imageConfig = getResponsiveImageConfig(
              'gallery',
              item.filename,
              item.title,
              1200,
              800,
              true, // Always use placeholder for now
              item.imageId
            );
            return (
              <div class="w-full flex-shrink-0 px-4 sm:px-8">
                <div class="relative group rounded-2xl overflow-hidden">
                  <img
                    src={imageConfig.src}
                    alt={imageConfig.alt}
                    width={imageConfig.width}
                    height={imageConfig.height}
                    sizes={imageConfig.sizes}
                    loading={index === 0 ? "eager" : "lazy"}
                    class="w-full h-[400px] sm:h-[500px] md:h-[600px] lg:h-[700px] object-cover rounded-2xl shadow-lg"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/80 to-transparent rounded-2xl">
                    <div class="absolute bottom-0 left-0 p-4 sm:p-6 md:p-8 text-white">
                      <h3 class="text-2xl sm:text-3xl font-bold mb-2 font-['Cormorant_Garamond'] text-primary/90">{item.title}</h3>
                      <p class="text-base sm:text-lg font-light opacity-90">{item.description}</p>
                    </div>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>
      <div class="flex items-center justify-center mt-4 sm:mt-6 md:mt-8 space-x-2 sm:space-x-3 md:space-x-4">
        <button 
          class="bg-primary/10 hover:bg-primary/20 p-1.5 sm:p-2 rounded-full shadow-lg transition-all duration-300 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-primary/20 flex items-center justify-center group" 
          id="prevBtn"
          aria-label="Previous slide"
        >
          <svg class="w-4 h-4 sm:w-5 sm:h-5 text-primary group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        <div class="flex items-center space-x-1.5">
          {galleryItems.map((_, index) => (
            <button
              class="relative w-1 h-1 rounded-full bg-gray-300/30 hover:bg-gray-400/30 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-primary/20"
              id={`dot-${index}`}
              aria-label={`Go to slide ${index + 1}`}
            >
              <span class="absolute inset-0 rounded-full bg-primary/80 scale-0 transition-transform duration-300"></span>
            </button>
          ))}
        </div>
        <button 
          class="bg-primary/10 hover:bg-primary/20 p-1.5 sm:p-2 rounded-full shadow-lg transition-all duration-300 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-primary/20 flex items-center justify-center group" 
          id="nextBtn"
          aria-label="Next slide"
        >
          <svg class="w-4 h-4 sm:w-5 sm:h-5 text-primary group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>

<script>
  let currentSlide = 0;
  const slides = document.querySelectorAll('.gallery-carousel > div > div');
  const dots = document.querySelectorAll('[id^="dot-"]');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');
  let autoAdvanceInterval: number;

  function updateSlide() {
    const carousel = document.querySelector('.gallery-carousel > div');
    carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
    
    // Update dots
    dots.forEach((dot, index) => {
      const indicator = dot.querySelector('span');
      if (index === currentSlide) {
        indicator.classList.add('scale-100');
      } else {
        indicator.classList.remove('scale-100');
      }
    });

    // Preload next image
    const nextIndex = (currentSlide + 1) % slides.length;
    const nextImage = slides[nextIndex].querySelector('img');
    if (nextImage && nextImage.loading === 'lazy') {
      nextImage.loading = 'eager';
    }
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % slides.length;
    updateSlide();
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + slides.length) % slides.length;
    updateSlide();
  }

  function startAutoAdvance() {
    autoAdvanceInterval = window.setInterval(nextSlide, 5000);
  }

  function stopAutoAdvance() {
    window.clearInterval(autoAdvanceInterval);
  }

  // Event listeners
  nextBtn.addEventListener('click', () => {
    stopAutoAdvance();
    nextSlide();
    startAutoAdvance();
  });
  
  prevBtn.addEventListener('click', () => {
    stopAutoAdvance();
    prevSlide();
    startAutoAdvance();
  });

  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      stopAutoAdvance();
      currentSlide = index;
      updateSlide();
      startAutoAdvance();
    });
  });

  // Pause auto-advance on hover
  const carousel = document.querySelector('.gallery-carousel');
  carousel.addEventListener('mouseenter', stopAutoAdvance);
  carousel.addEventListener('mouseleave', startAutoAdvance);

  // Start auto-advance
  startAutoAdvance();
</script>

<style>
  .gallery-carousel {
    position: relative;
    width: 100%;
    overflow: hidden;
  }
  
  .gallery-carousel > div {
    display: flex;
    width: 100%;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .gallery-carousel > div > div {
    flex: 0 0 100%;
  }
</style> 